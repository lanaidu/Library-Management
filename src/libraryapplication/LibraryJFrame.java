/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package libraryapplication;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.Properties;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lakshmi
 */
public class LibraryJFrame extends javax.swing.JFrame {

    private Component frame;

    /**
     * Creates new form LibraryJFrame
     */
    public LibraryJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        checkbox1 = new java.awt.Checkbox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jTabbedPaneMaintabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        Book_Name = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Book_ID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Author = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButtonSearch = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        COBookID = new javax.swing.JTextField();
        jLabelCOBookID = new javax.swing.JLabel();
        COCardNo = new javax.swing.JTextField();
        jLabelCOCardNo = new javax.swing.JLabel();
        jLabelCOBranchID = new javax.swing.JLabel();
        COBranchID = new javax.swing.JTextField();
        jCheckout = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        BO_fName = new javax.swing.JTextField();
        LableBOfName = new javax.swing.JLabel();
        LableBOfName1 = new javax.swing.JLabel();
        BO_lName = new javax.swing.JTextField();
        LabelAdd = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        BO_city = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        BO_state = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        BO_ph1 = new javax.swing.JTextField();
        BO_add = new javax.swing.JTextField();
        add_borrower = new javax.swing.JButton();
        BO_ph2 = new javax.swing.JTextField();
        BO_ph3 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        CIBookID = new javax.swing.JTextField();
        CI_CardNo = new javax.swing.JTextField();
        CIFname = new javax.swing.JTextField();
        CIlname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        CI_search = new javax.swing.JButton();
        Check_in_but = new javax.swing.JButton();
        CI_loanID = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        fCard_no = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        Pay_fine = new javax.swing.JButton();

        jButton1.setText("jButton1");

        jCheckBox1.setText("jCheckBox1");

        checkbox1.setLabel("checkbox1");

        jCheckBox2.setText("jCheckBox2");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jInternalFrame1.setVisible(true);

        Book_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Book_NameActionPerformed(evt);
            }
        });

        jLabel1.setText("Book Name");

        Book_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Book_IDActionPerformed(evt);
            }
        });

        jLabel2.setText("Book ID");

        jLabel3.setText("Author");

        jButtonSearch.setText("Search");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(Author))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(43, 43, 43)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Book_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Book_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Book_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Book_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Author, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(41, 41, 41)
                .addComponent(jButtonSearch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneMaintabs.addTab("Search", jPanel1);

        COBookID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                COBookIDActionPerformed(evt);
            }
        });

        jLabelCOBookID.setText("Book ID");

        COCardNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                COCardNoActionPerformed(evt);
            }
        });

        jLabelCOCardNo.setText("Card No");

        jLabelCOBranchID.setText("Branch ID");

        COBranchID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                COBranchIDActionPerformed(evt);
            }
        });

        jCheckout.setText("Check out");
        jCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckout)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelCOBranchID)
                            .addComponent(jLabelCOBookID)
                            .addComponent(jLabelCOCardNo))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(COCardNo, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(COBookID, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(COBranchID, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(COBookID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCOBookID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(COCardNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCOCardNo))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCOBranchID)
                    .addComponent(COBranchID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jCheckout)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneMaintabs.addTab("CheckOut", jPanel2);

        LableBOfName.setText("First Name *");

        LableBOfName1.setText("Last Name *");

        LabelAdd.setText("Address *");

        jLabel4.setText("City *");

        jLabel5.setText("State *");

        jLabel6.setText("Phone");

        add_borrower.setText("Add Borrower");
        add_borrower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_borrowerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(LabelAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LableBOfName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LableBOfName1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(BO_lName, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                                .addComponent(BO_fName)
                                .addComponent(BO_state, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                                .addComponent(BO_city))
                            .addComponent(BO_add, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(BO_ph1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BO_ph2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BO_ph3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(add_borrower)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BO_fName)
                    .addComponent(LableBOfName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BO_lName)
                    .addComponent(LableBOfName1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelAdd)
                    .addComponent(BO_add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(BO_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(BO_state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BO_ph1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BO_ph3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BO_ph2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(add_borrower)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneMaintabs.addTab("SignupBorrower", jPanel4);

        jPanel3.setAutoscrolls(true);
        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        CI_CardNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CI_CardNoActionPerformed(evt);
            }
        });

        jLabel7.setText("Book ID");

        jLabel8.setText("Card #");

        jLabel9.setText("First name");

        jLabel10.setText("Last name");

        CI_search.setText("Search");
        CI_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CI_searchActionPerformed(evt);
            }
        });

        Check_in_but.setText("Check In");
        Check_in_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Check_in_butActionPerformed(evt);
            }
        });

        CI_loanID.setText("                 ");
        CI_loanID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CI_loanIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CIFname, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CIlname, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(CI_CardNo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(CIBookID, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(CI_search)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CI_loanID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Check_in_but))
                .addGap(20, 20, 20))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(CIBookID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(CI_CardNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(CIFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CI_loanID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(CIlname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(Check_in_but)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CI_search)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneMaintabs.addTab("CheckIn", jPanel3);

        jButton2.setText("Check fine");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        fCard_no.setText("                 ");

        jLabel11.setText("Card number");

        Pay_fine.setText("Pay Fine");
        Pay_fine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pay_fineActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fCard_no, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pay_fine, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fCard_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jButton2)
                .addGap(2, 2, 2)
                .addComponent(Pay_fine)
                .addGap(230, 230, 230))
        );

        jTabbedPaneMaintabs.addTab("Fines", jPanel6);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addComponent(jTabbedPaneMaintabs, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 113, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addComponent(jTabbedPaneMaintabs, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 228, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Book_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Book_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Book_NameActionPerformed

    private void Book_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Book_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Book_IDActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        // TODO add your handling code here:
        try {
            Connection conn = null;
            Class.forName("com.mysql.jdbc.Driver");
            Properties connectionProps = new Properties();
            connectionProps.put("user", "root");
            connectionProps.put("password", "root");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", connectionProps);
            System.out.println("Connected!");
            boolean iswhile = false;
            String query = "SELECT a.book_id,a.title,a.author,c.branch_id,c.no_of_copies as Copies,c.no_of_copies-(select count(*) from book_loan b where b.book_id=a.book_id and c.branch_id=b.branch_id and  date_in is NULL) as Available  FROM book_author a left outer join book_copies c on a.book_id=c.book_id ";
            //int bookid=Integer.parseInt(Book_ID.getText());
            if (!Book_ID.getText().equals("")) {
                query += "where a.book_id like '%" + Book_ID.getText() + "%'";
                iswhile = true;
            }
            if (!Book_Name.getText().equals("")) {
                if (iswhile) {
                    query += "and a.title like '%" + Book_Name.getText() + "%'";
                } else {
                    query += "where a.title like '%" + Book_Name.getText() + "%'";
                    iswhile = true;
                }
            }
            if (!Author.getText().equals("")) {
                if (iswhile) {
                    query += "and a.author like '%" + Author.getText() + "%'";
                } else {
                    query += "where a.author like '%" + Author.getText() + "%'";
                    iswhile = true;
                }
            }

            query += ";";
            System.out.println("..." + query);
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            if (rs.isBeforeFirst()) {
                ResultSetMetaData meta = rs.getMetaData();
                int colCount = meta.getColumnCount();

                Vector<String> columnNames = new Vector<String>();

                for (int column = 1; column <= colCount; column++) {
                    columnNames.add(meta.getColumnName(column));
                }
                Vector<Vector<Object>> data = new Vector<Vector<Object>>();
                while (rs.next()) {
                    Vector<Object> vector = new Vector<Object>();
                    for (int columnIndex = 1; columnIndex <= colCount; columnIndex++) {
                        vector.add(rs.getObject(columnIndex));
                    }
                    data.add(vector);
                }

                JTable table = new JTable(new DefaultTableModel(data, columnNames));
                table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                table.getColumnModel().getColumn(0).setMinWidth(80);
                table.getColumnModel().getColumn(1).setMinWidth(300);
                table.getColumnModel().getColumn(2).setMinWidth(270);
                table.getColumnModel().getColumn(3).setMinWidth(80);
                table.getColumnModel().getColumn(4).setMinWidth(80);
                JScrollPane scrollpane = new JScrollPane(table);
                scrollpane.setPreferredSize(new Dimension(700, 500));
                JOptionPane.showMessageDialog(null, scrollpane, "Search Result:" + data.size(), JOptionPane.PLAIN_MESSAGE);

                conn.close();
                // System.out.println(book_id+author+title);
            } else {

                JOptionPane.showMessageDialog(frame, "No books found for this combination, please change your search criteria.", "Empty Result Set", JOptionPane.WARNING_MESSAGE);
            }

        } catch (SQLException sql) {
            System.out.println("SQL exception!!");
            sql.printStackTrace();
        } catch (ClassNotFoundException c) {
            c.printStackTrace();
        }

    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void COBookIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COBookIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_COBookIDActionPerformed

    private void COCardNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COCardNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_COCardNoActionPerformed

    private void COBranchIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COBranchIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_COBranchIDActionPerformed

    private void jCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckoutActionPerformed
        try {
            Connection conn = null;
            Class.forName("com.mysql.jdbc.Driver");
            Properties connectionProps = new Properties();
            connectionProps.put("user", "root");
            connectionProps.put("password", "root");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", connectionProps);
            System.out.println("Connected!");
            if(COBookID.getText().trim().equals("") || COCardNo.getText().trim().equals("") || COBranchID.getText().trim().equals("")){
             JOptionPane.showMessageDialog(null, "All fields are mandatory");
            }
            String query = "SELECT * FROM borrowers where card_no=" + COCardNo.getText() + ";";

            //System.out.println("..."+query);
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            if (rs.isBeforeFirst()) {
                query = "select * from book_loan where card_no=" + COCardNo.getText() + " and date_in is NULL;";
                ResultSet rs1 = st.executeQuery(query);
                if (rs1.isBeforeFirst()) {
                    rs1.last();
                    int count = rs1.getRow();
                    if (count == 3) {
                        JOptionPane.showMessageDialog(frame, "User has already taken 3 books, in order to take a book, he/she should return a book!", "Can't isssue!", JOptionPane.WARNING_MESSAGE);
                    }
                }
                query= "select distinct(c.no_of_copies-(select count(*) from book_loan b where b.book_id=a.book_id and c.branch_id=b.branch_id and  date_in is NULL)) as Available  FROM book_author a left outer join book_copies c on a.book_id=c.book_id, book_loan bl where";
                query+=" c.book_id='"+COBookID.getText().trim()+"' and c.branch_id="+COBranchID.getText()+" and bl.card_no="+COCardNo.getText()+";";
                System.out.println(".24............"+query);
                ResultSet r1=st.executeQuery(query);
                r1.next();
                r1.last();
                int count=r1.getRow();
                if(count==0){
                JOptionPane.showMessageDialog(null, "Either branch_ID or Book_ID is not a valid value!");
                }else{
                r1.first();
                int copycount=r1.getInt("Available");
                if(copycount!=0){
                
                query = "insert into book_loan(book_id,branch_id,card_no,date_out,due_date,date_in) values('" + COBookID.getText() + "'," + COBranchID.getText() + "," + COCardNo.getText() + ",CURDATE(),CURDATE()+interval 14 day,NULL);";
                System.out.println("....." + query);
                st.executeUpdate(query);
                query="select max(loan_id) from book_loan;";
                ResultSet r=st.executeQuery(query);
                String loan_id=null;
                if(r.next()){
                loan_id=r.getString("max(loan_id)");
                }
                
                PreparedStatement s=conn.prepareStatement("insert into fine values(? ,? ,?);");
                s.setInt(1,Integer.parseInt(loan_id));
                s.setDouble(2,0.00);
                s.setBoolean(3, false);
                }else{
                    JOptionPane.showMessageDialog(null, "no copies available in that branch, try a different branch!");
                }
                }
            } else {

                JOptionPane.showMessageDialog(frame, "No card holder account found, Please sign up for a new account!!", "Empty Result Set", JOptionPane.WARNING_MESSAGE);
            }

        } catch (SQLException sql) {
            System.out.println("SQL exception!!");
            sql.printStackTrace();
        } catch (ClassNotFoundException c) {
            c.printStackTrace();
        }
    }//GEN-LAST:event_jCheckoutActionPerformed

    private void add_borrowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_borrowerActionPerformed
        // TODO add your handling code here:
        try {
            Connection conn = null;
            Class.forName("com.mysql.jdbc.Driver");
            Properties connectionProps = new Properties();
            connectionProps.put("user", "root");
            connectionProps.put("password", "root");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", connectionProps);
            if(BO_fName.getText().trim().equals("")|| BO_lName.getText().trim().equals("") || BO_add.getText().trim().equals("") || BO_city.getText().trim().equals("") || BO_state.getText().trim().equals("")){
             JOptionPane.showMessageDialog(null, "Please enter all the required fields (marked with an asterisk)");
            }else{
            String prequery = "select * from borrowers where fname='" + BO_fName.getText()
                    + "' and lname='" + BO_lName.getText() + "' and address like '%" + BO_add.getText() + "%';";

            System.out.println("Connected!");
            System.out.println("./...." + prequery);
            Statement st = conn.createStatement();
            ResultSet prs = st.executeQuery(prequery);
            prs.last();

            if (prs.getRow() > 0) {
                System.out.println("we come here!!");
                JOptionPane.showMessageDialog(frame, "A record already exits with this information", "Alert!", JOptionPane.WARNING_MESSAGE);
            } else {

                String phone = "(" + BO_ph1.getText() + ") " + BO_ph2.getText() + "-" + BO_ph3.getText();
                String query = "insert into borrowers(fname,lname,address,city,state,phone)values ('" + BO_fName.getText() + "','" + BO_lName.getText() + "','" + BO_add.getText() + "','" + BO_city.getText() + "','" + BO_state.getText() + "','" + phone + "');";
                System.out.println("Done!" + query);
                st.executeUpdate(query);
                ResultSet rs = st.executeQuery("select fname,lname,card_no from borrowers where card_no in(select max(card_no) as card_no from borrowers)");
                while (rs.next()) {
                    JOptionPane.showMessageDialog(frame, "Details:\n" + "Name: " + rs.getString("fname") + rs.getString("lname") + "\n Card No: " + rs.getString("card_no"), "Success!", JOptionPane.WARNING_MESSAGE);
                }
            }
            }
        } catch (SQLException sql) {
            System.out.println("SQL exception!!");
            sql.printStackTrace();
        } catch (ClassNotFoundException c) {
            c.printStackTrace();
        }
    }//GEN-LAST:event_add_borrowerActionPerformed

    private void CI_CardNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CI_CardNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CI_CardNoActionPerformed

    String[] ColumnNamesforCheckIn = {"Loan ID", "Book ID", "Branch ID", "Card Number", "Date out", "Due date", "Date in"};
    DefaultTableModel model = new DefaultTableModel(ColumnNamesforCheckIn, 0);
    JFrame frameForBookCheckIn = new JFrame("Books Borrowed");

    JTable tableForBookCheckIn = new JTable(model);
    Object dataCheckIn[][];
    private void CI_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CI_searchActionPerformed
        // TODO add your handling code here:
        if (CIBookID.getText().equals("") && CI_CardNo.getText().equals("") && CIFname.getText().equals("") && CIlname.getText().equals("")) {
            JOptionPane.showMessageDialog(frame, "Empty form, please enter data in atleast one field", "Empty form", JOptionPane.ERROR_MESSAGE);
        }
        try {
            Connection conn = null;
            boolean iswhile = false, isprev = false;
            Class.forName("com.mysql.jdbc.Driver");
            Properties connectionProps = new Properties();
            connectionProps.put("user", "root");
            connectionProps.put("password", "root");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", connectionProps);
            System.out.println("Connected!");
            
           
           
            frameForBookCheckIn.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            frameForBookCheckIn.setSize(400, 700);
            Statement stmt = conn.createStatement();
            String query="Select loan_id,book_id,branch_id,a.card_no,date_out,due_date,date_in from book_loan a left outer join borrowers b on a.card_no=b.card_no "
                    + "where book_id like '%"+CIBookID.getText()+"%' and fname like '%"+CIFname.getText() +"%' and lname like '%"+ CIlname.getText()+"%' and a.date_in is null ";
            if(!CI_CardNo.getText().trim().equals("")){
                 int card_no = Integer.valueOf(CI_CardNo.getText());
                query+=" and card_no="+CI_CardNo.getText().trim()+";";
            }
           
            ResultSet rset = stmt.executeQuery(query);
            int rowCount = 0;
            while (rset.next()) {

                rowCount = rowCount + 1;
            }
            System.out.println("rowCount" + rowCount);
            dataCheckIn = new Object[rowCount][7];
            rset.beforeFirst();
            if (rowCount == 0) {
                JOptionPane.showMessageDialog(null, "No book loans with entered details.");
            } else {

                String[] ColumnNamesforCheckIn = {"Loan ID", "Book ID", "Branch ID", "Card Number", "Date out", "Due date", "Date in"};

                for (int i = 0; i <= (rowCount - 1); i++) {

                    if (rset.next()) {

                        dataCheckIn[i][0] = rset.getInt("loan_id");
                        dataCheckIn[i][1] = rset.getString("book_id");
                        dataCheckIn[i][2] = rset.getString("branch_id");
                        dataCheckIn[i][3] = rset.getInt("card_no");
                        dataCheckIn[i][4] = rset.getString("date_out");
                        dataCheckIn[i][5] = rset.getString("due_date");
                        dataCheckIn[i][6] = rset.getString("date_in");
                        System.out.println(rset.getInt("card_no"));
                        model.addRow(new Object[]{dataCheckIn[i][0], dataCheckIn[i][1], dataCheckIn[i][2], dataCheckIn[i][3], dataCheckIn[i][4], dataCheckIn[i][5], dataCheckIn[i][6]});

                    }

                }

                tableForBookCheckIn.setPreferredScrollableViewportSize(new Dimension(500, 70));
                tableForBookCheckIn.setFillsViewportHeight(true);

                JScrollPane scrollPaneForBookCheckIn = new JScrollPane(tableForBookCheckIn);
                add(scrollPaneForBookCheckIn);

                frameForBookCheckIn = new JFrame("Books Loaned");
                frameForBookCheckIn.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frameForBookCheckIn.setSize(400, 400);
                frameForBookCheckIn.add(scrollPaneForBookCheckIn);
                frameForBookCheckIn.setVisible(true);

                model = new DefaultTableModel(dataCheckIn, ColumnNamesforCheckIn);
                tableForBookCheckIn.setModel(model);

                tableForBookCheckIn.addMouseListener(new MouseAdapter() {

                    @Override

                    public void mouseClicked(MouseEvent e) {

                        int row = tableForBookCheckIn.rowAtPoint(new Point(e.getX(), e.getY()));
                        System.out.println("row" + row);
                        String loan_ID = (tableForBookCheckIn.getModel().getValueAt(row, 0)).toString();
                        CI_loanID.setText(loan_ID);
                        CI_loanID.setEditable(false);

                    }

                });
                conn.close();

            }

            
        } catch (SQLException sql) {
            sql.printStackTrace();
        } catch (ClassNotFoundException c) {
            c.printStackTrace();
        } catch (NumberFormatException n) {
            JOptionPane.showMessageDialog(null, "Enter only numbers for card_no!");

        }
    }//GEN-LAST:event_CI_searchActionPerformed

    private void Check_in_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Check_in_butActionPerformed
        // TODO add your handling code here:
        try{
            int Loan = Integer.valueOf(CI_loanID.getText());
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library","root","root");
             PreparedStatement stmt = conn.prepareStatement("update book_loan set date_in = curdate() where loan_id = ? ");
             stmt.setInt(1,Loan);             
             stmt.executeUpdate();
             
             JOptionPane.showMessageDialog(null, "date_in entered in book_loans table.");
             
              PreparedStatement stmt2 = conn.prepareStatement("select due_date, date_in from book_loan where loan_id = ? ");
             stmt2.setInt(1,Loan);
             
             ResultSet rset = stmt2.executeQuery();
             
             int rowCount = 0;
             while(rset.next())
              {
    
               rowCount = rowCount + 1;
              }
            System.out.println("rowCount"+rowCount);  
            rset.first();
             //due_date = rset.getDate(1);
             //date_in = rset.getDate(2);
             
             Date due_date = rset.getDate("due_date");
             Date date_in = rset.getDate("date_in");
             
             if(date_in.compareTo(due_date)>0)
             {
                 
             
             long D1= due_date.getTime();
             long D2= date_in.getTime();
             long diff = D2-D1;
             int days = (int)(diff/(1000*60*60*24));
             System.out.println("days"+days);
             float fine = (float) (days*0.25);
             
             JOptionPane.showMessageDialog(null, " Fine charged:"+fine);
             
             PreparedStatement stmt1 = conn.prepareStatement("insert into fine values (? , ?, ?) ");
             stmt1.setInt(1,Loan);
             stmt1.setFloat(2,fine);
             stmt1.setBoolean(3,false);
             
             stmt1.executeUpdate();     
             
             }
             
        }catch(NumberFormatException n){
             JOptionPane.showMessageDialog(null, "Loan ID not populated!");
        }catch(SQLException sql){
            sql.printStackTrace();
        }
    }//GEN-LAST:event_Check_in_butActionPerformed

    private void CI_loanIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CI_loanIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CI_loanIDActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        try{
            Connection conn;
         Class.forName("com.mysql.jdbc.Driver");
         Properties connectionProps = new Properties();
         connectionProps.put("user", "root");
         connectionProps.put("password", "root");
         conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library","root","root");  
         System.out.println("Connecfted!!");
         int card_no=Integer.parseInt(fCard_no.getText().trim());
         
         String query = "select sum(fine) from fine where loan_id in (select Loan_id from book_loan where card_no="+card_no+");";
         
         Statement st = conn.createStatement();
         ResultSet rs = st.executeQuery(query);
         String fine;
         if(rs.next()){
             fine=rs.getString("sum(fine)");
                if(fine!=null){
                 JOptionPane.showMessageDialog(null, "Total fine: "+fine);
                 
                 }else{
                 JOptionPane.showMessageDialog(null, "No dues! ;) ");
                             }
            fCard_no.setEditable(false);
            no_dues=true;
                    
         
         }
         
        }catch(SQLException sql){
            sql.printStackTrace();
        }catch(ClassNotFoundException c){
            c.printStackTrace();
        }catch(NumberFormatException n){
            JOptionPane.showMessageDialog(null, "Card # not populated!");
            n.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed
boolean no_dues=false;
    private void Pay_fineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pay_fineActionPerformed
        // TODO add your handling code here:
        try{
            Connection conn;
         Class.forName("com.mysql.jdbc.Driver");
         Properties connectionProps = new Properties();
         connectionProps.put("user", "root");
         connectionProps.put("password", "root");
         conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library","root","root");  
         System.out.println("Connected!!");
         int card_no=Integer.parseInt(fCard_no.getText().trim());
         if(no_dues){
              JOptionPane.showMessageDialog(null, "No dues, not a valid operation");
         }else{
         String query = " update fine set paid=true where loan_id IN (select loan_id from book_loan where card_no="+card_no+");";
         
         Statement st = conn.createStatement();
         st.executeUpdate(query);
         
         
         JOptionPane.showMessageDialog(null, "Fine paid for :"+card_no);
         
         }
         
        }catch(SQLException sql){
            sql.printStackTrace();
        }catch(ClassNotFoundException c){
            c.printStackTrace();
        }catch(NumberFormatException n){
            JOptionPane.showMessageDialog(null, "Card # not populated!");
            n.printStackTrace();
        }
    }//GEN-LAST:event_Pay_fineActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LibraryJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LibraryJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LibraryJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LibraryJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
       /*  Connection conn = null;
         try{
         Class.forName("com.mysql.jdbc.Driver");
         Properties connectionProps = new Properties();
         connectionProps.put("user", "root");
         connectionProps.put("password", "root");
         conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library","root","root");  
         System.out.println("Connected!! kiss of life:-*");
         String query = "SELECT * FROM book_author";
         Statement st = conn.createStatement();
         ResultSet rs = st.executeQuery(query);
         while (rs.next())
         {
       
         String book_id = rs.getString("book_id");
         String author = rs.getString("author");
         String title= rs.getString("title");
         System.out.println(book_id+author+title);
         }
         
         }catch(SQLException sql){
         System.out.println("SQL exception!!");
         sql.printStackTrace();
         }
         catch(ClassNotFoundException c){
         c.printStackTrace();
         }*/
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new LibraryJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Author;
    private javax.swing.JTextField BO_add;
    private javax.swing.JTextField BO_city;
    private javax.swing.JTextField BO_fName;
    private javax.swing.JTextField BO_lName;
    private javax.swing.JTextField BO_ph1;
    private javax.swing.JTextField BO_ph2;
    private javax.swing.JTextField BO_ph3;
    private javax.swing.JTextField BO_state;
    private javax.swing.JTextField Book_ID;
    private javax.swing.JTextField Book_Name;
    private javax.swing.JTextField CIBookID;
    private javax.swing.JTextField CIFname;
    private javax.swing.JTextField CI_CardNo;
    private javax.swing.JTextField CI_loanID;
    private javax.swing.JButton CI_search;
    private javax.swing.JTextField CIlname;
    private javax.swing.JTextField COBookID;
    private javax.swing.JTextField COBranchID;
    private javax.swing.JTextField COCardNo;
    private javax.swing.JButton Check_in_but;
    private javax.swing.JLabel LabelAdd;
    private javax.swing.JLabel LableBOfName;
    private javax.swing.JLabel LableBOfName1;
    private javax.swing.JButton Pay_fine;
    private javax.swing.JButton add_borrower;
    private java.awt.Checkbox checkbox1;
    private javax.swing.JTextField fCard_no;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JButton jCheckout;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCOBookID;
    private javax.swing.JLabel jLabelCOBranchID;
    private javax.swing.JLabel jLabelCOCardNo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPaneMaintabs;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
